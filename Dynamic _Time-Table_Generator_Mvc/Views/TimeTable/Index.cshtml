@model Dynamic__Time_Table_Generator_Mvc.Models.TimeTableRequest

@using (Html.BeginForm("CreateTimeTable", "TimeTable", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="container mt-5">
        <!-- Step 1 -->
        <div class="card shadow-lg border-light mb-4">
            <div class="card-body">
                <h4 class="card-title text-center text-primary mb-4">Time Table</h4>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="row justify-content-center">
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.WorkingDays, htmlAttributes: new { @class = "form-label" })
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-calendar-day"></i></span>
                                </div>
                                @Html.EditorFor(model => model.WorkingDays, new { htmlAttributes = new { @class = "form-control", id = "workingDays", placeholder = "Enter working days", autocomplete = "off" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.WorkingDays, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.SubjectsPerDay, htmlAttributes: new { @class = "form-label" })
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-book"></i></span>
                                </div>
                                @Html.EditorFor(model => model.SubjectsPerDay, new { htmlAttributes = new { @class = "form-control", id = "subjectsPerDay", placeholder = "Enter subjects per day", autocomplete = "off" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.SubjectsPerDay, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.TotalSubjects, htmlAttributes: new { @class = "form-label" })
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-clipboard"></i></span>
                                </div>
                                @Html.EditorFor(model => model.TotalSubjects, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter total subjects", autocomplete = "off" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.TotalSubjects, "", new { @class = "text-danger" })
                        </div>

                        <!-- Display the calculated Total Hours -->
                        <div class="form-group">
                            <label class="form-label">Total Hours</label>
                            <p id="totalHours" class="text-success">Total Hours for the Week: @Model.TotalHours</p>
                        </div>

                        <div class="form-group text-center">
                            <button type="submit" class="btn btn-primary btn-sm w-100">Next</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
  }
